workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "d63070dd15f63d8a25537a71e531bd5872113897da0b5d3bb256747c4b949612",
    strip_prefix = "abseil-cpp-483a2d59e649179ea9d9bc4d808f6c9d16646f9d",
    urls = ["https://github.com/abseil/abseil-cpp/archive/483a2d59e649179ea9d9bc4d808f6c9d16646f9d.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "142a19ae6e500a7c31e017d57b7071c77972039887395176d8eb9b299c47205a",
    strip_prefix = "googletest-b10fad38c4026a29ea6561ab15fc4818170d1c10",
    urls = ["https://github.com/google/googletest/archive/b10fad38c4026a29ea6561ab15fc4818170d1c10.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "fcc3ec6c3133d0ce8ae6b0c9bee0f39b45b9dec516806da245bef307686be727",
    strip_prefix = "protobuf-ecc2bac63875b4291900f73dfe2c1f836c5b53b6",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/ecc2bac63875b4291900f73dfe2c1f836c5b53b6.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "36abb9dedd87f624725f9ae7a4bd8814a126491d46f524dd1ae78639d4df6ffd",
    strip_prefix = "re2-974f44c8d45242e710dc0a85a4defffdb3ce07fc",
    urls = ["https://github.com/google/re2/archive/974f44c8d45242e710dc0a85a4defffdb3ce07fc.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "0d060bbfe3446804ca668a807522712fb460200d4eaefb41b4137bf9fbdf3f93",
    strip_prefix = "rules_cc-51b77439a109b8c8f75ad70a130293291ed8b851",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/51b77439a109b8c8f75ad70a130293291ed8b851.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "c6d6f9bfd39b6417724fd4a504767aa1e8dbfe828d9d41ab4ccd1976aba53fb4",
    strip_prefix = "rules_proto-7188888362a203892dec354f52623f9970bff48c",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/7188888362a203892dec354f52623f9970bff48c.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/7188888362a203892dec354f52623f9970bff48c.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "bb07091c4a1b35038cf38b65bc98f8684cf239722ea8c6d428bd08adaa147886",
    strip_prefix = "emsdk-f677ef915645c09794f0ae88f21d3cba2886459f/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/f677ef915645c09794f0ae88f21d3cba2886459f.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "90235e587dbc968a854ab11ac358c3a0fa57b4c121f540880419203dfe3cfa46",
    strip_prefix = "closure-library-7818ff7dc0b53555a7fb3c3427e6761e88bde3a2",
    urls = ["https://github.com/google/closure-library/archive/7818ff7dc0b53555a7fb3c3427e6761e88bde3a2.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
